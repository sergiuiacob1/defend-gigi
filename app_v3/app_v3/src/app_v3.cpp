// This file generated by ngrestcg
// For more information, please visit: https://github.com/loentar/ngrest

#include "./app_v3.h"
#include "json.hpp"
#include "./utils.h"
#include "./user.h"
#include "./arena.h"
using json = nlohmann::json;

std::vector <Arena> arenas;

std::string app::hello(const std::string& name){
  log(name);
  return "Buna si tie" + name;
}

std::string app::getArenaInfo(const std::string& id, const std::string& userId){
  int i;
  int intId = std::stoi(id);
  int intUserId = std::stoi(userId);
  for (i = 0; i < arenas.size(); ++i){
    if (arenas[i].getId() == intId)
      return arenas[i].getArenaInfo(intUserId);
  }
  std::string res = "okay";
  return res;
}

std::string app::startGame(const std::string& name){
  json res;
  //return j.dump();
  //return "Startgame";
  int i;
  position init = {0, 0};
  User user(name, init);
  for (i = 0; i < arenas.size(); ++i){
    if (arenas[i].addUser(user)){
      res["userId"] = user.getId();
      res["arenaId"] = arenas[i].getId();
      return res.dump();
    }
  }
  //no arenas left for the user
  //create a new arena

  Arena arena;
  arenas.push_back(arena);
  arenas[arenas.size() - 1].addUser(user);

  res["userId"] = user.getId();
  res["arenaId"] = arenas[arenas.size() - 1].getId();
  return res.dump();
}

std::string app::updateArenaInfo(const std::string& arenaId, const std::string& userId, const std::string& move){
  int i;
  int intArenaId = std::stoi(arenaId);
  int intUserId = std::stoi(userId);
  for (i = 0; i < arenas.size(); ++i){
    if (arenas[i].getId() == intArenaId){
      arenas[i].updateUser(intUserId, move);
    }
  }
  return "Okay";
}
